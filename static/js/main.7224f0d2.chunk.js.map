{"version":3,"sources":["shared/cache/LocalStorage.ts","shared/api/API.ts","shared/api/service/APIService.ts","routes/RoutingPath.ts","shared/provider/UserProvider.tsx","components/backdrop/BackDrop.tsx","view/HomeView.tsx","view/SignInView.tsx","view/UserSettingsView.tsx","view/UserProfileView.tsx","view/ResetPasswordView.tsx","view/navigationtabviews/products/categoryfilter/CategoryFilter.tsx","shared/provider/ToggleCartProvider.tsx","view/navigationtabviews/products/displayproducts/DisplayProducts.tsx","view/navigationtabviews/products/ProductsView.tsx","view/navigationtabviews/accessories/AccessoriesView.tsx","view/navigationtabviews/brands/BrandsView.tsx","view/navigationtabviews/expertise/ExpertiseView.tsx","view/navigationtabviews/news/NewsView.tsx","view/admin/components/CreateProduct.tsx","view/admin/components/CreateProductBrand.tsx","view/admin/components/CreateProductCategory.tsx","view/admin/AdminView.tsx","view/CheckoutView.tsx","routes/Routes.tsx","hooks/useWindowDimensions.tsx","components/navigation/mobilenavigation/hamburgerbutton/HamburgerButton.tsx","components/navigation/mobilenavigation/sidebar/SideBar.tsx","components/navigation/mobilenavigation/MobileNavigation.tsx","shared/images/logotypeTemplate.svg","components/profile/dropdownprofile/DropdownProfile.tsx","shared/images/user.svg","components/profile/Profile.tsx","components/cart/ShoppingBagToggler.tsx","shared/images/shoppingbag.svg","components/shoppingbag/ShoppingBag.tsx","components/navigation/desktopnavigation/desktopnavigatontabs/DesktopNavigationTabs.tsx","components/navigation/desktopnavigation/DesktopNavigation.tsx","components/navigation/Navigation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API","Axios","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","LocalStorage","Authorization","data","http","post","credentials","ID","get","email","newPasswordAndToken","put","productCategoryName","productData","productBrandData","UserContext","createContext","defaultValues","_id","undefined","username","authenticated","shoppingCart","products","cartId","UserProvider","props","useState","authenticatedUser","setAuthenticatedUser","children","Provider","value","BackDrop","drawerHandler","onClick","className","HomeView","useContext","console","log","SignInView","history","useHistory","password","registerUser","setRegisterUser","loginCredentials","setLoginCredentials","forgotPasswordEmail","setForgotPasswordEmail","signIn","event","a","preventDefault","APIService","setItem","push","RoutingPath","register","alert","sendRecoveryEmail","placeholder","onChange","target","UserSettingsView","UserProfileView","ResetPasswordView","newPassword","setNewPassword","setData","getTokenFromURL","window","location","href","split","reverse","requestNewPassword","newPasswordWithEmailToken","resetPasswordToken","response","loginUserIfPasswordGotReset","status","useEffect","CategoryFilter","ToggleCartContext","ToggleCartProvider","isShoppingBagOpen","setIsShoppingBagOpen","DisplayProducts","setProducts","fetchData","addToCart","productId","updatedCart","map","x","src","alt","title","price","ProductsView","AccessoriesView","BrandsView","ExpertiseView","NewsView","CreateProduct","productCategories","setProductCategories","productBrand","productBrands","setProductBrands","quantity","productCategory","product","setProduct","fetchProductCategoriesData","fetchProductBrandsData","handleChange","find","handleSelectedCategoryChange","productBrandName","handleSelectedBrandChange","CreateProductBrand","brandName","setBrandName","CreateProductCategory","categoryName","setCategoryName","AdminView","CheckoutView","Routes","navigateToViewIfAuthenticated","authenticationRequired","navigateToViewifAuthenticated","parseJWT","base64Url","base64","replace","JWT","JSON","parse","atob","exp","Math","floor","Date","now","id","removeItem","fallback","exact","path","component","getWindowDimensions","width","innerWidth","height","innerHeight","HamburgerButton","SideBar","drawerIsOpen","MobileNavigation","openDrawer","setOpenDrawer","DropdownProfile","Profile","userIcon","ShoppingBagToggler","removeProductFromCart","array","index","newArray","slice","ShoppingBag","shoppingbag","length","DesktopNavigationTabs","DesktopNavigation","Logotype","Navigation","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7224f0d2.chunk.js","sourcesContent":["const authenticationToken = 'token'\r\n\r\nexport default {\r\n\tauthenticationToken\r\n}","import Axios from 'axios'\r\nimport LocalStorage from '../cache/LocalStorage'\r\n\r\nconst API = Axios.create({\r\n\tbaseURL: 'http://localhost:3001',\r\n\theaders: { 'Content-Type': 'application/json' }\r\n})\r\n\r\nAPI.interceptors.request.use(function (config) {\r\n\tconst token = localStorage.getItem(LocalStorage.authenticationToken)\r\n\tconfig.headers.Authorization = token ? `Bearer ${token}` : ''\r\n\treturn config\r\n})\r\n\r\nexport default API","import http from '../API'\r\nimport { loginCredentials, user, email, newPasswordWithEmailToken, productCategoryNameId, createNewProduct, createNewProductBrand, updateCartInterface } from '../../interface/Interface'\r\n\r\nconst authenticatedRouteExample = () => {\r\n\treturn http.get('/rofl')\r\n}\r\n\r\nconst registerNewUser = (data: user) => {\r\n\treturn http.post('/user/register', data)\r\n}\r\n\r\nconst login = (credentials: loginCredentials) => {\r\n\treturn http.post('/user/login', credentials)\r\n}\r\n\r\nconst getAllUsers = () => {\r\n\treturn http.get('/user')\r\n}\r\n\r\nconst getUserWithID = (ID: string) => {\r\n\treturn http.get(`/user/${ID}`)\r\n}\r\n\r\nconst getUserWithQuery = (usernameQuery: string) => {\r\n\treturn http.get(`/searchuser?username=${usernameQuery}`)\r\n}\r\n\r\nconst updateValuesOfExistingUser = () => {\r\n\treturn http.get('/user/:userId')\r\n}\r\n\r\nconst deleteUserWithID = () => {\r\n\treturn http.delete('/user/:userId')\r\n}\r\n\r\nconst forgotPassword = (email: email) => {\r\n\treturn http.post('/forgotpassword', email)\r\n}\r\n\r\nconst resetPassword = (newPasswordAndToken: newPasswordWithEmailToken) => {\r\n\treturn http.put('/resetpassword', newPasswordAndToken)\r\n}\r\n\r\n// Admin privilege required to use the functions below\r\n\r\nconst createProduct = (productData: createNewProduct) => {\r\n\treturn http.post('/product', productData)\r\n}\r\n\r\nconst createProductCategory = (productCategoryName: productCategoryNameId) => {\r\n\treturn http.post('/productcategory', productCategoryName)\r\n}\r\n\r\nconst getAllProducts = () => {\r\n\treturn http.get('/product')\r\n}\r\n\r\nconst getAllProductCategories = () => {\r\n\treturn http.get('/productcategory')\r\n}\r\n\r\nconst createProductBrand = (productBrandData: createNewProductBrand) => {\r\n\treturn http.post('/productbrand', productBrandData)\r\n}\r\n\r\nconst getAllProductBrands = () => {\r\n\treturn http.get('/productbrand')\r\n}\r\n\r\nconst updateCart = (data: updateCartInterface) => {\r\n\treturn http.put('/shoppingcart/add', data)\r\n}\r\n\r\nexport default {\r\n\tauthenticatedRouteExample,\r\n\tregisterNewUser,\r\n\tlogin,\r\n\tgetAllUsers,\r\n\tgetUserWithID,\r\n\tgetUserWithQuery,\r\n\tupdateValuesOfExistingUser,\r\n\tdeleteUserWithID,\r\n\tforgotPassword,\r\n\tresetPassword,\r\n\tcreateProductCategory,\r\n\tcreateProduct,\r\n\tgetAllProductCategories,\r\n\tgetAllProducts,\r\n\tcreateProductBrand,\r\n\tgetAllProductBrands,\r\n\tupdateCart\r\n}","const signInView = '/signin'\r\nconst homeView = '/'\r\nconst userSettingsView = '/user/settings'\r\nconst userProfileView = '/user/profile'\r\nconst forgotPasswordView = '/reset/:token'\r\nconst accessoriesView = '/product/accessories'\r\nconst brandsView = '/brands'\r\nconst expertiseView = '/expertise'\r\nconst newsView = '/news'\r\nconst productsView = '/product'\r\nconst checkoutView = '/checkout'\r\nconst admin = '/admin'\r\n\r\n\r\nexport default {\r\n\tsignInView,\r\n\thomeView,\r\n\tuserSettingsView,\r\n\tuserProfileView,\r\n\tforgotPasswordView,\r\n\taccessoriesView,\r\n\tbrandsView,\r\n\texpertiseView,\r\n\tnewsView,\r\n\tproductsView,\r\n\tcheckoutView,\r\n\tadmin\r\n}","import React, { useState, createContext } from 'react'\r\nimport { authenticatedUser } from '../interface/Interface'\r\n\r\nexport const UserContext = createContext<any>(null)\r\nconst defaultValues = { _id: undefined, username: undefined, token: undefined, authenticated: false, shoppingCart: [{ products: [] }], cartId: '' }\r\n\r\nexport const UserProvider = (props: { children?: React.ReactChild }) => {\r\n\tconst [authenticatedUser, setAuthenticatedUser] = useState<authenticatedUser>(defaultValues)\r\n\tconst { children } = props\r\n\r\n\treturn (\r\n\t\t<UserContext.Provider value={[authenticatedUser, setAuthenticatedUser]}>\r\n\t\t\t{children}\r\n\t\t</UserContext.Provider>\r\n\t)\r\n}","import React from 'react'\r\nimport './BackDrop.css'\r\n\r\nexport const BackDrop = (props: { drawerHandler?: (closeDrawer: boolean) => void }): JSX.Element => {\r\n\tconst { drawerHandler } = props\r\n\r\n\treturn <div onClick={() => drawerHandler ? drawerHandler(false) : null} className={'BackDrop'} />\r\n}\r\n","import { useContext } from 'react'\r\nimport { UserContext } from '../shared/provider/UserProvider'\r\n\r\nexport const HomeView: React.FC = (): JSX.Element => {\r\n\tconst [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>HomePage</h1>\r\n\t\t\t<button onClick={() => console.log(authenticatedUser)}>authenticatedUser</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport APIService from '../shared/api/service/APIService'\r\nimport { useHistory } from 'react-router-dom'\r\nimport RoutingPath from '../routes/RoutingPath'\r\nimport { UserContext } from '../shared/provider/UserProvider'\r\nimport { email, registerNewUser, loginCredentials } from '../shared/interface/Interface'\r\nimport LocalStorage from '../shared/cache/LocalStorage'\r\n\r\nexport const SignInView: React.FC = (): JSX.Element => {\r\n\tconst history = useHistory()\r\n\tconst [, setAuthenticatedUser] = useContext(UserContext)\r\n\tconst [registerUser, setRegisterUser] = useState<registerNewUser>({ username: '', password: '' })\r\n\tconst [loginCredentials, setLoginCredentials] = useState<loginCredentials>({ username: '', password: '' })\r\n\tconst [forgotPasswordEmail, setForgotPasswordEmail] = useState<email>({ email: '' })\r\n\r\n\tconst signIn = async (event: React.MouseEvent<HTMLElement>) => {\r\n\t\tevent.preventDefault()\r\n\t\ttry {\r\n\t\t\tconst { data } = await APIService.login(loginCredentials)\r\n\t\t\tlocalStorage.setItem(LocalStorage.authenticationToken, data.token)\r\n\t\t\tsetAuthenticatedUser(data)\r\n\t\t\thistory.push(RoutingPath.homeView)\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t}\r\n\r\n\tconst register = async (event: React.MouseEvent<HTMLElement>) => {\r\n\t\tevent.preventDefault()\r\n\t\ttry {\r\n\t\t\tawait APIService.registerNewUser(registerUser)\r\n\t\t\talert('Sucessfully created your account!')\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t\talert(error)\r\n\t\t}\r\n\t}\r\n\r\n\tconst sendRecoveryEmail = async () => {\r\n\t\ttry {\r\n\t\t\tawait APIService.forgotPassword(forgotPasswordEmail)\r\n\t\t\talert(`We've sent a recovery link to: ${forgotPasswordEmail.email}`)\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t\talert('Error occured')\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Login</h1>\r\n\t\t\t<form>\r\n\t\t\t\t<input placeholder=\"username\" onChange={(event) => setLoginCredentials({ ...loginCredentials, username: event.target.value })} /> <br />\r\n\t\t\t\t<input placeholder=\"password\" onChange={(event) => setLoginCredentials({ ...loginCredentials, password: event.target.value })} />\r\n\t\t\t\t<button onClick={(event) => signIn(event)}>Sign in</button>\r\n\t\t\t</form>\r\n\r\n\t\t\t<h1>Forgot your password?</h1>\r\n\t\t\t<input placeholder=\"Enter your email\" onChange={(event) => setForgotPasswordEmail({ email: event.target.value })} />\r\n\t\t\t<button onClick={() => sendRecoveryEmail()}>Send recovery link</button>\r\n\r\n\t\t\t<hr />\r\n\r\n\t\t\t<h1>Register</h1>\r\n\t\t\t<form>\r\n\t\t\t\t<input placeholder=\"username\" onChange={(event) => setRegisterUser({ ...registerUser, username: event.target.value })} /> <br />\r\n\t\t\t\t<input placeholder=\"password\" onChange={(event) => setRegisterUser({ ...registerUser, password: event.target.value })} />\r\n\t\t\t\t<button onClick={(event) => register(event)}>Register</button>\r\n\t\t\t</form>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport const UserSettingsView: React.FC = (): JSX.Element => {\r\n\tconst [data, setData] = useState({})\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>This is the userSettingsView</h1>\r\n\t\t\t<h1>Change password here:</h1>\r\n\t\t\t<input placeholder='current password' /> <br />\r\n\t\t\t<input placeholder='new password' /> <br />\r\n\t\t\t<button onClick={() => console.log('')}>OK</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\n\r\nexport const UserProfileView: React.FC = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>This is the UserProfileView</h1>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport RoutingPath from '../routes/RoutingPath'\r\nimport APIService from '../shared/api/service/APIService'\r\nimport { UserContext } from '../shared/provider/UserProvider'\r\n\r\nexport const ResetPasswordView: React.FC = (): JSX.Element => {\r\n\tconst history = useHistory()\r\n\tconst [newPassword, setNewPassword] = useState<string>('')\r\n\tconst [data, setData] = useState<any>({})\r\n\tconst [, setAuthenticatedUser] = useContext(UserContext)\r\n\tconst getTokenFromURL = window.location.href.split('/').reverse()[0]\r\n\r\n\r\n\tconst requestNewPassword = async () => {\r\n\t\tconst newPasswordWithEmailToken = { password: newPassword, resetPasswordToken: getTokenFromURL }\r\n\t\tconst response = await APIService.resetPassword(newPasswordWithEmailToken)\r\n\t\tsetData(response)\r\n\t}\r\n\r\n\tconst loginUserIfPasswordGotReset = async () => {\r\n\t\tconst loginCredentials = { username: data.data?.username, password: newPassword }\r\n\t\tif (data.status == 200) {\r\n\t\t\tconst response = await APIService.login(loginCredentials)\r\n\t\t\tsetAuthenticatedUser(response.data)\r\n\t\t\tconsole.log(response.data)\r\n\t\t\thistory.push(RoutingPath.homeView)\r\n\t\t}\r\n\t}\r\n\r\n\tconst validateToken = () => {\r\n\t\t//TODO: Validate the token from the URL. If it is valid then remain on this view and offer a password change.\r\n\t\t//TODO: If the token is not valid then history.push('this reset link is no bueno')\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tvalidateToken()\r\n\t\tloginUserIfPasswordGotReset()\r\n\t}, [data])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>This is the resetPasswordView</h1>\r\n\t\t\t<input placeholder='Your new password' onChange={(event) => setNewPassword(event.target.value)} /> <br />\r\n\t\t\t<button onClick={() => requestNewPassword()}>reset pw</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import './CategoryFilter.css'\r\n\r\nexport const CategoryFilter = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p>PRODUKTKATEGORIER</p>\r\n\t\t\t<p>Category 1</p>\r\n\t\t\t<p>Category 2</p>\r\n\t\t\t<p>Category 3</p>\r\n\t\t\t<p>Category 4</p>\r\n\t\t\t<p>Category 5</p>\r\n\t\t\t<p>Category 6</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState, createContext } from 'react'\r\n\r\nexport const ToggleCartContext = createContext<any>(null)\r\n\r\nexport const ToggleCartProvider = (props: { children?: React.ReactChild }) => {\r\n\tconst [isShoppingBagOpen, setIsShoppingBagOpen] = useState<boolean>(false)\r\n\tconst { children } = props\r\n\r\n\treturn (\r\n\t\t<ToggleCartContext.Provider value={[isShoppingBagOpen, setIsShoppingBagOpen]}>\r\n\t\t\t{children}\r\n\t\t</ToggleCartContext.Provider>\r\n\t)\r\n}","import './DisplayProducts.css'\r\nimport { useEffect, useState, useContext } from 'react'\r\nimport APIService from '../../../../shared/api/service/APIService'\r\nimport { UserContext } from '../../../../shared/provider/UserProvider'\r\nimport { ToggleCartContext } from '../../../../shared/provider/ToggleCartProvider'\r\n\r\nexport const DisplayProducts = () => {\r\n\tconst [products, setProducts] = useState<any>([])\r\n\tconst [, setIsShoppingBagOpen] = useContext(ToggleCartContext)\r\n\tconst [authenticatedUser, setAuthenticatedUser] = useContext<any>(UserContext)\r\n\r\n\tconst fetchData = async () => {\r\n\t\tconst { data } = await APIService.getAllProducts()\r\n\t\tsetProducts(data)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchData()\r\n\t}, [])\r\n\r\n\tconst addToCart = async (productId: string) => {\r\n\t\ttry {\r\n\t\t\tconst updatedCart = [...authenticatedUser?.shoppingCart[0]?.products, productId]\r\n\t\t\tawait APIService.updateCart({\r\n\t\t\t\t//TODO: Get user CartId when signing in (in authenticatedUser)\r\n\t\t\t\tcartId: authenticatedUser.shoppingCart[0]._id,\r\n\t\t\t\tproducts: updatedCart\r\n\t\t\t})\r\n\t\t\tsetIsShoppingBagOpen(true)\r\n\t\t\tsetAuthenticatedUser({ ...authenticatedUser, shoppingCart: [{ ...authenticatedUser.shoppingCart[0], products: updatedCart }] })\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t}\r\n\r\n\tconst displayData = () => {\r\n\t\treturn products.map((x: any) =>\r\n\t\t\t<div className='displayProductWrapper' key={x?._id}>\r\n\t\t\t\t<img src={'https://picsum.photos/200/200'} alt='' />\r\n\t\t\t\t<p>{x?.title}</p>\r\n\t\t\t\t<p>Brand Name</p>\r\n\t\t\t\t<p>{x?.price} kr</p>\r\n\t\t\t\t<button onClick={() => addToCart(x?._id)}>Lägg till i varukorg</button>\r\n\t\t\t</div>)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{displayData()}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import { CategoryFilter } from './categoryfilter/CategoryFilter'\r\nimport { DisplayProducts } from './displayproducts/DisplayProducts'\r\n\r\nexport const ProductsView = () => {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<CategoryFilter />\r\n\t\t\t<DisplayProducts />\r\n\t\t</div>\r\n\t)\r\n}\r\n","export const AccessoriesView = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Här listas Accessoarer</h1>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\n\r\nexport const BrandsView = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Här är alla varumärken vi sammarbetar med</h1>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\n\r\nexport const ExpertiseView = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Beginners Guide till XD</h1>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\n\r\nexport const NewsView = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Nyheter/senaste inkommit?</h1>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport APIService from '../../../shared/api/service/APIService'\r\nimport { createNewProduct, productCategoryNameId, productBrandInterface } from '../../../shared/interface/Interface'\r\n\r\nexport const CreateProduct = () => {\r\n\tconst [productCategories, setProductCategories] = useState<[productCategoryNameId]>([{ productCategoryName: '', _id: '' }])\r\n\tconst [productBrands, setProductBrands] = useState<[any]>([{ productBrand: '', _id: '' }])\r\n\tconst [product, setProduct] = useState<createNewProduct>({ title: '', price: 0, quantity: 0, productBrand: '', productCategory: '' })\r\n\r\n\tconst fetchProductCategoriesData = async () => {\r\n\t\tconst { data } = await APIService.getAllProductCategories()\r\n\t\tsetProductCategories(data)\r\n\t}\r\n\r\n\tconst fetchProductBrandsData = async () => {\r\n\t\tconst { data } = await APIService.getAllProductBrands()\r\n\t\tsetProductBrands(data)\r\n\t}\r\n\r\n\tconst handleSelectedBrandChange = (event: any, target: keyof createNewProduct) => {\r\n\t\tconst find = (productBrands.find(({ productBrandName }) => productBrandName === event.target.value))\r\n\t\tsetProduct({ ...product, [target]: find?._id })\r\n\t}\r\n\r\n\tconst handleSelectedCategoryChange = (event: any, target: keyof createNewProduct) => {\r\n\t\tconst find = (productCategories.find(({ productCategoryName }) => productCategoryName === event.target.value))\r\n\t\tsetProduct({ ...product, [target]: find?._id })\r\n\t}\r\n\r\n\tconst selectCategory = () => {\r\n\t\treturn <select onChange={(event) => handleSelectedCategoryChange(event, 'productCategory')} >\r\n\t\t\t{productCategories.map((x: productCategoryNameId) => <option key={x?._id}>{x?.productCategoryName}</option>)}\r\n\t\t</select>\r\n\t}\r\n\r\n\tconst selectBrand = () => {\r\n\t\treturn <select onChange={(event) => handleSelectedBrandChange(event, 'productBrand')} >\r\n\t\t\t{productBrands.map((x: any) => <option key={x?._id}>{x?.productBrandName}</option>)}\r\n\t\t</select>\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchProductCategoriesData()\r\n\t\tfetchProductBrandsData()\r\n\t}, [])\r\n\r\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>, target: keyof createNewProduct) => {\r\n\t\tsetProduct({ ...product, [target]: event.target.value })\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Create a new product:</h1>\r\n\t\t\tproductCategory: {selectCategory()} <br />\r\n\t\t\t\tproductBrand: {selectBrand()} <br />\r\n\t\t\ttitle: <input placeholder='title' onChange={event => handleChange(event, 'title')} /> <br />\r\n\t\t\tprice: <input placeholder='price' onChange={event => handleChange(event, 'price')} /> <br />\r\n\t\t\tquantity: <input placeholder='quantity' onChange={event => handleChange(event, 'quantity')} /> <br />\r\n\t\t\t<button onClick={() => APIService.createProduct(product)}>Create Product</button>\r\n\t\t</div>\r\n\t)\r\n}","import { useState } from 'react'\r\nimport APIService from '../../../shared/api/service/APIService'\r\nimport { createNewProductBrand } from '../../../shared/interface/Interface'\r\n\r\n\r\nexport const CreateProductBrand = () => {\r\n\tconst [brandName, setBrandName] = useState<createNewProductBrand>({ productBrandName: '' })\r\n\r\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>, target: keyof createNewProductBrand) => {\r\n\t\tsetBrandName({ ...brandName, [target]: event.target.value })\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Create new ProductBrand:</h1> <br />\r\n\t\t\t<h1>{brandName.productBrandName}</h1>\r\n\t\t\t<input onChange={event => handleChange(event, 'productBrandName')} />\r\n\t\t\t<button onClick={() => APIService.createProductBrand(brandName)}>Create ProductBrand</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import { useState } from 'react'\r\nimport APIService from '../../../shared/api/service/APIService'\r\n\r\nexport const CreateProductCategory = () => {\r\n\tconst [categoryName, setCategoryName] = useState<string>('')\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Create new ProductCategory:</h1> <br />\r\n\t\t\t<h1>{categoryName}</h1>\r\n\t\t\t<input onChange={event => setCategoryName(event.target.value)} />\r\n\t\t\t<button onClick={() => APIService.createProductCategory({ productCategoryName: categoryName })}>Create ProductCategory</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import { CreateProduct } from './components/CreateProduct'\r\nimport { CreateProductBrand } from './components/CreateProductBrand'\r\nimport { CreateProductCategory } from './components/CreateProductCategory'\r\n\r\nexport const AdminView = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CreateProductCategory /> <hr />\r\n\t\t\t<CreateProductBrand /> <hr />\r\n\t\t\t<CreateProduct /> <hr />\r\n\t\t</>\r\n\t)\r\n}\r\n","import { useContext } from 'react'\r\nimport { UserContext } from '../shared/provider/UserProvider'\r\n\r\nexport const CheckoutView = () => {\r\n\tconst [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>This is the checkout view</h1>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { Suspense, useEffect, useContext } from 'react'\r\nimport APIService from '../shared/api/service/APIService'\r\nimport RoutingPath from './RoutingPath'\r\nimport LocalStorage from '../shared/cache/LocalStorage'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport { UserContext } from '../shared/provider/UserProvider'\r\nimport { BackDrop } from '../components/backdrop/BackDrop'\r\nimport { HomeView } from '../view/HomeView'\r\nimport { SignInView } from '../view/SignInView'\r\nimport { UserSettingsView } from '../view/UserSettingsView'\r\nimport { UserProfileView } from '../view/UserProfileView'\r\nimport { ResetPasswordView } from '../view/ResetPasswordView'\r\nimport { ProductsView } from '../view/navigationtabviews/products/ProductsView'\r\nimport { AccessoriesView } from '../view/navigationtabviews/accessories/AccessoriesView'\r\nimport { BrandsView } from '../view/navigationtabviews/brands/BrandsView'\r\nimport { ExpertiseView } from '../view/navigationtabviews/expertise/ExpertiseView'\r\nimport { NewsView } from '../view/navigationtabviews/news/NewsView'\r\nimport { AdminView } from '../view/admin/AdminView'\r\nimport { CheckoutView } from '../view/CheckoutView'\r\n\r\nexport const Routes = (props: { children?: React.ReactChild }) => {\r\n\tconst { children } = props\r\n\tconst [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\r\n\r\n\tconst authenticationRequired = (navigateToViewifAuthenticated: any) => {\r\n\t\treturn authenticatedUser.authenticated ? navigateToViewifAuthenticated : SignInView\r\n\t}\r\n\r\n\tconst blockRouteIfAuthenticated = (navigateToViewIfAuthenticated: any) => {\r\n\t\treturn authenticatedUser.authenticated ? HomeView : navigateToViewIfAuthenticated\r\n\t}\r\n\r\n\tconst isTokenValid = (tokenExp: number) => {\r\n\t\tconst currentTime = Math.floor(Date.now() / 1000)\r\n\t\treturn (tokenExp >= currentTime)\r\n\t}\r\n\r\n\tconst parseJWT = async () => {\r\n\t\tconst token = localStorage.getItem(LocalStorage.authenticationToken)\r\n\t\tif (!token) { return }\r\n\t\tconst base64Url = token.split('.')[1]\r\n\t\tconst base64 = base64Url.replace('-', '+').replace('_', '/')\r\n\t\tconst JWT = JSON.parse(window.atob(base64))\r\n\r\n\t\tif (isTokenValid(JWT.exp)) {\r\n\t\t\t// TODO: There has to be a better way to recieve the username? You cannot just do a getUserWithID like this?\r\n\t\t\tconst response = await APIService.getUserWithID(JWT.id)\r\n\t\t\tsetAuthenticatedUser({\r\n\t\t\t\tauthenticated: true,\r\n\t\t\t\tid: JWT.id,\r\n\t\t\t\tusername: response.data.username,\r\n\t\t\t\tshoppingCart: response.data.shoppingCart\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tsetAuthenticatedUser({ authenticated: false, id: undefined, username: undefined })\r\n\t\t\tlocalStorage.removeItem(LocalStorage.authenticationToken)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tparseJWT()\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<Suspense fallback={<BackDrop />} />\r\n\t\t\t{children}\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path={RoutingPath.signInView} component={blockRouteIfAuthenticated(SignInView)} />\r\n\t\t\t\t<Route exact path={RoutingPath.userSettingsView} component={authenticationRequired(UserSettingsView)} />\r\n\t\t\t\t<Route exact path={RoutingPath.userProfileView} component={authenticationRequired(UserProfileView)} />\r\n\t\t\t\t<Route exact path={RoutingPath.forgotPasswordView} component={ResetPasswordView} />\r\n\t\t\t\t<Route exact path={RoutingPath.checkoutView} component={CheckoutView} />\r\n\r\n\t\t\t\t{/* Navigationbar tabs view */}\r\n\t\t\t\t<Route exact path={RoutingPath.productsView} component={ProductsView} />\r\n\t\t\t\t<Route exact path={RoutingPath.accessoriesView} component={AccessoriesView} />\r\n\t\t\t\t<Route exact path={RoutingPath.brandsView} component={BrandsView} />\r\n\t\t\t\t<Route exact path={RoutingPath.expertiseView} component={ExpertiseView} />\r\n\t\t\t\t<Route exact path={RoutingPath.newsView} component={NewsView} />\r\n\r\n\t\t\t\t{/* AdminView */}\r\n\t\t\t\t<Route exact path={RoutingPath.admin} component={AdminView} />\r\n\r\n\t\t\t\t{/* Default Tab */}\r\n\t\t\t\t<Route component={HomeView} />\r\n\t\t\t</Switch>\r\n\t\t</BrowserRouter>\r\n\t)\r\n}\r\n","import { useState, useEffect } from 'react'\r\n\r\nconst getWindowDimensions = () => {\r\n\tconst { innerWidth: width, innerHeight: height } = window\r\n\treturn { width, height }\r\n}\r\n\r\nexport const useWindowDimensions = () => {\r\n\tconst [windowDimensions, setWindowDimensions] = useState(getWindowDimensions())\r\n\tconst handleResize = () => { setWindowDimensions(getWindowDimensions()) }\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('resize', handleResize)\r\n\t\treturn () => window.removeEventListener('resize', handleResize)\r\n\t}, [])\r\n\treturn windowDimensions\r\n}","import React from 'react'\r\nimport './HamburgerButton.css'\r\n\r\nexport const HamburgerButton = (props: { drawerHandler: (handler: boolean) => void }): JSX.Element => {\r\n\treturn (\r\n\t\t<button className=\"toggle-button\" onClick={() => props.drawerHandler(true)}>\r\n\t\t\t<div className=\"toggle-button__line\" />\r\n\t\t\t<div className=\"toggle-button__line\" />\r\n\t\t\t<div className=\"toggle-button__line\" />\r\n\t\t</button>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport './SideBar.css'\r\n\r\nexport const SideBar = (props: { drawerIsOpen: boolean, drawerHandler: (handler: boolean) => void }): JSX.Element => {\r\n\r\n\treturn (\r\n\t\t<nav className={props.drawerIsOpen ? 'side-drawer open' : 'side-drawer'}>\r\n\t\t\t<h1 onClick={() => props.drawerHandler(false)}>Exit</h1>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a href=\"/\">Products</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a href=\"/\">Users</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t)\r\n}\r\n","import React, { useState } from 'react'\r\nimport './MobileNavigation.css'\r\nimport { HamburgerButton } from './hamburgerbutton/HamburgerButton'\r\nimport { SideBar } from './sidebar/SideBar'\r\nimport { BackDrop } from '../../backdrop/BackDrop'\r\n\r\nexport const MobileNavigation: React.FC = (): JSX.Element => {\r\n\tconst [openDrawer, setOpenDrawer] = useState<boolean>(false)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<HamburgerButton drawerHandler={setOpenDrawer} />\r\n\t\t\t<SideBar drawerIsOpen={openDrawer} drawerHandler={setOpenDrawer} />\r\n\t\t\t{!openDrawer || <BackDrop drawerHandler={setOpenDrawer} />}\r\n\t\t</div>\r\n\t)\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logotypeTemplate.55df397c.svg\";","import React, { useContext } from 'react'\r\nimport './DropdownProfile.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport RoutingPath from '../../../routes/RoutingPath'\r\nimport { UserContext } from '../../../shared/provider/UserProvider'\r\nimport LocalStorage from '../../../shared/cache/LocalStorage'\r\n\r\nexport const DropdownProfile = () => {\r\n\tconst history = useHistory()\r\n\tconst [, setAuthenticatedUser] = useContext(UserContext)\r\n\r\n\tconst logout = () => {\r\n\t\tsetAuthenticatedUser({\r\n\t\t\tauthenticated: false,\r\n\t\t\tid: undefined,\r\n\t\t\tusername: undefined,\r\n\t\t\tshoppingCart: [{ products: [] }]\r\n\t\t})\r\n\t\tlocalStorage.removeItem(LocalStorage.authenticationToken)\r\n\t\thistory.push(RoutingPath.homeView)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"profileDropdown\">\r\n\t\t\t<span>Arasto Sahbaei</span> <br />\r\n\t\t\t<span>arasto.sahbaei@gmail.com</span>\r\n\t\t\t<hr />\r\n\t\t\t<span onClick={() => history.push(RoutingPath.userProfileView)}>Profile</span>\r\n\t\t\t<span onClick={() => history.push(RoutingPath.userSettingsView)}>Settings</span>\r\n\t\t\t<span onClick={() => logout()}>Logout</span>\r\n\t\t\t<hr />\r\n\t\t\t<span>Theme: Dark mode</span>\r\n\t\t\t<span>Language: EN</span>\r\n\t\t\t<span>Location: Unknown</span>\r\n\t\t\t<span>GDPR</span>\r\n\t\t\t<span>Report a issue/bug</span>\r\n\t\t</div>\r\n\t)\r\n}\r\n","export default __webpack_public_path__ + \"static/media/user.9fd9547f.svg\";","import React from 'react'\r\nimport { DropdownProfile } from './dropdownprofile/DropdownProfile'\r\nimport userIcon from '../../shared/images/user.svg'\r\nimport './Profile.css'\r\n\r\nexport const Profile = (): JSX.Element => {\r\n\r\n\treturn (\r\n\t\t<div className='profileWrapper'>\r\n\t\t\t<img className='profileImg'\r\n\t\t\t\tsrc={userIcon}\r\n\t\t\t\talt={''} />\r\n\t\t\t<DropdownProfile />\r\n\t\t</div>\r\n\t)\r\n}\r\n","import './ShoppingBagToggler.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport RoutingPath from '../../routes/RoutingPath'\r\nimport { useContext } from 'react'\r\nimport { UserContext } from '../../shared/provider/UserProvider'\r\nimport APIService from '../../shared/api/service/APIService'\r\n\r\nexport const ShoppingBagToggler = (props: { isShoppingBagOpen: boolean, setIsShoppingBagOpen: (handler: boolean) => void }) => {\r\n\tconst history = useHistory()\r\n\tconst { isShoppingBagOpen, setIsShoppingBagOpen } = props\r\n\tconst [authenticatedUser, setAuthenticatedUser] = useContext<any>(UserContext)\r\n\r\n\tconst checkout = () => {\r\n\t\thistory.push(RoutingPath.checkoutView)\r\n\t\tsetIsShoppingBagOpen(false)\r\n\t}\r\n\r\n\r\n\tconst removeProductFromCart = async (array: any[], index: number) => {\r\n\t\tconst newArray = [...array.slice(0, index), ...array.slice(index + 1)]\r\n\t\tawait APIService.updateCart({\r\n\t\t\tcartId: authenticatedUser.shoppingCart[0]._id,\r\n\t\t\tproducts: newArray\r\n\t\t})\r\n\t\tsetAuthenticatedUser({ ...authenticatedUser, shoppingCart: [{ ...authenticatedUser.shoppingCart[0], products: newArray }] })\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={isShoppingBagOpen ? 'cart-drawer open' : 'cart-drawer'}>\r\n\t\t\t<h1 onClick={() => setIsShoppingBagOpen(false)}>Exit</h1>\r\n\t\t\t<ul>\r\n\t\t\t\t{authenticatedUser?.shoppingCart[0]?.products?.map((product: any, index: number) =>\r\n\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t<li onClick={() => removeProductFromCart(authenticatedUser?.shoppingCart[0]?.products, index)}> {product} </li>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</ul>\r\n\t\t\t<button onClick={() => checkout()}>Go to checkout</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/shoppingbag.fbd2e23e.svg\";","import shoppingbag from '../../shared/images/shoppingbag.svg'\r\nimport { useContext } from 'react'\r\nimport './ShoppingBag.css'\r\nimport { UserContext } from '../../shared/provider/UserProvider'\r\n\r\n\r\nexport const ShoppingBag = (props: { setIsShoppingBagOpen: (handler: boolean) => void }) => {\r\n\tconst { setIsShoppingBagOpen } = props\r\n\tconst [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<img className=\"shoppingBagIcon\"\r\n\t\t\t\tonClick={() => setIsShoppingBagOpen(true)}\r\n\t\t\t\tsrc={shoppingbag}\r\n\t\t\t\talt=''\r\n\t\t\t/>\r\n\t\t\t<span>{authenticatedUser?.shoppingCart[0]?.products?.length}</span>\r\n\t\t</>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport RoutingPath from '../../../../routes/RoutingPath'\r\nimport './DesktopNavigationTabs.css'\r\n\r\nexport const DesktopNavigationTabs = () => {\r\n\tconst history = useHistory()\r\n\r\n\treturn (\r\n\t\t<ul className=\"ulTabsWrapper\">\r\n\t\t\t<li className=\"liTabsWrapper\" onClick={() => history.push(RoutingPath.productsView)}>Butik</li>\r\n\t\t\t<li className=\"liTabsWrapper\" onClick={() => history.push(RoutingPath.accessoriesView)}>Accessoarer</li>\r\n\t\t\t<li className=\"liTabsWrapper\" onClick={() => history.push(RoutingPath.brandsView)}>Varumärken</li>\r\n\t\t\t<li className=\"liTabsWrapper\" onClick={() => history.push(RoutingPath.newsView)}>Nyheter</li>\r\n\t\t\t<li className=\"liTabsWrapper\" onClick={() => history.push(RoutingPath.expertiseView)}>Expertis</li>\r\n\t\t</ul>\r\n\t)\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport RoutingPath from '../../../routes/RoutingPath'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Logotype from '../../../shared/images/logotypeTemplate.svg'\r\nimport { UserContext } from '../../../shared/provider/UserProvider'\r\nimport { Profile } from '../../profile/Profile'\r\nimport './DesktopNavigation.css'\r\nimport { ShoppingBagToggler } from '../../cart/ShoppingBagToggler'\r\nimport { ShoppingBag } from '../../shoppingbag/ShoppingBag'\r\nimport { BackDrop } from '../../backdrop/BackDrop'\r\nimport { ToggleCartContext } from '../../../shared/provider/ToggleCartProvider'\r\nimport { DesktopNavigationTabs } from './desktopnavigatontabs/DesktopNavigationTabs'\r\n\r\nexport const DesktopNavigation: React.FC = (): JSX.Element => {\r\n\tconst history = useHistory()\r\n\tconst [authenticatedUser,] = useContext(UserContext)\r\n\tconst [isShoppingBagOpen, setIsShoppingBagOpen] = useContext(ToggleCartContext)\r\n\r\n\tconst displaySignInButtonOrUsernameDependingOnAuthentication = () => {\r\n\t\treturn authenticatedUser.authenticated\r\n\t\t\t? <div className='navigationProfile'> <Profile /> </div>\r\n\t\t\t: <span className='signInButton' onClick={() => history.push(RoutingPath.signInView)}> Sign in </span>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='desktopNavigationWrapper'>\r\n\t\t\t<img className='navigationLogotype'\r\n\t\t\t\tonClick={() => history.push(RoutingPath.homeView)}\r\n\t\t\t\tsrc={Logotype}\r\n\t\t\t\talt='' />\r\n\t\t\t<div className='desktopNavigationTabs'>\r\n\t\t\t\t<DesktopNavigationTabs />\r\n\t\t\t</div>\r\n\t\t\t{displaySignInButtonOrUsernameDependingOnAuthentication()}\r\n\t\t\t<button onClick={() => console.log(authenticatedUser)}>authenticatedUser</button>\r\n\t\t\t<div className='navigationShoppingCart'>\r\n\t\t\t\t<ShoppingBag setIsShoppingBagOpen={setIsShoppingBagOpen} />\r\n\t\t\t</div>\r\n\t\t\t<ShoppingBagToggler isShoppingBagOpen={isShoppingBagOpen} setIsShoppingBagOpen={setIsShoppingBagOpen} />\r\n\t\t\t{!isShoppingBagOpen || <BackDrop drawerHandler={setIsShoppingBagOpen} />}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport './Navigation.css'\r\nimport { useWindowDimensions } from '../../hooks/useWindowDimensions'\r\nimport { MobileNavigation } from './mobilenavigation/MobileNavigation'\r\nimport { DesktopNavigation } from './desktopnavigation/DesktopNavigation'\r\n\r\nexport const Navigation = (): JSX.Element => {\r\n\tconst { height, width } = useWindowDimensions()\r\n\r\n\tconst displayNavigationBarDependingOnWindowSizeWidth = () => {\r\n\t\treturn (width <= 1000) ? <MobileNavigation /> : <DesktopNavigation />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{displayNavigationBarDependingOnWindowSizeWidth()}\r\n\t\t</>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport './shared/global/Global.css'\r\nimport { Routes } from './routes/Routes'\r\nimport { Navigation } from './components/navigation/Navigation'\r\nimport { UserProvider } from './shared/provider/UserProvider'\r\nimport { ToggleCartProvider } from './shared/provider/ToggleCartProvider'\r\n\r\nexport const App = (): JSX.Element => {\r\n\treturn (\r\n\t\t<ToggleCartProvider>\r\n\t\t\t<UserProvider>\r\n\t\t\t\t<Routes>\r\n\t\t\t\t\t<Navigation />\r\n\t\t\t\t</Routes>\r\n\t\t\t</UserProvider>\r\n\t\t</ToggleCartProvider>\r\n\t)\r\n}\r\n","import { ReportHandler } from 'web-vitals'\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\r\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n\t\t\tgetCLS(onPerfEntry)\r\n\t\t\tgetFID(onPerfEntry)\r\n\t\t\tgetFCP(onPerfEntry)\r\n\t\t\tgetLCP(onPerfEntry)\r\n\t\t\tgetTTFB(onPerfEntry)\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { App } from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n)\r\n\r\nreportWebVitals()\r\n"],"sourceRoot":""}